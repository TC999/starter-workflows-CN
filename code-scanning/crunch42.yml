# 该工作流使用GitHub未经认证的操作。
# 这些操作由第三方提供，并受单独的服务条款、隐私政策和支持文档约束。

# 该工作流用于定位 REST API 文件合同（Swagger 或 OpenAPI 格式，v2 和 v3，JSON 和 YAML）
# 并使用 42Crunch 安全审计技术对它们运行 300 多个安全检查，以发现与身份验证、授权以及数据验证相关的潜在漏洞。
#
# 文档位于此处：https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm
#
# 要使用此工作流，您需要一个 42Crunch 平台帐户。如果您没有帐户，可以从此页面联系我们：https://42crunch.com/request-demo。
#
# 1. 按照 https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm 的步骤
#    在 42Crunch 平台上创建一个 API 令牌。
#
# 2. 按照 https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm 中的说明
#    在 GitHub 中创建一个秘密，并将 42Crunch API 令牌存储在该秘密中。预期的默认值为 API_TOKEN（请参阅任务中的 api-token 属性）。
#
# 如果您有任何问题或需要帮助，请在此处打开问题：https://support.42crunch.com.

name: "42Crunch REST API Static Security Testing"

# 遵循标准的代码扫描触发器
on:
  push:
    branches: [ $default-branch, $protected-branches ]
  pull_request:
    # 下面的分支必须是上面的分支的子集
    branches: [ $default-branch ]
  schedule:
    - cron: $cron-weekly

permissions:
  contents: read

jobs:
  rest-api-static-security-testing:
    permissions:
      contents: read # 用于 actions/checkout 获取代码
      security-events: write # 用于 42Crunch/api-security-audit-action 将结果上传到 Github Code Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 42Crunch REST API 静态安全性测试
        uses: 42Crunch/api-security-audit-action@fc01ea7a89e6268875868f9d89598af7a9899ae0
        with:
          # 请在 https://platform.42crunch.com/register 创建免费帐户
          # 按照这些步骤配置 API_TOKEN https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm
          api-token: ${{ secrets.API_TOKEN }}
          # 如果任何 OpenAPI 文件的分数低于 75，则失败
          min-score: 75
          # 将结果上传到 Github code scanning
          upload-to-code-scanning: true
          # 用于上传结果的 Github 令牌
          github-token: ${{ github.token }}
