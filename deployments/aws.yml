# 此工作流程将在对 $default-branch 分支的推送时，构建并推送一个新的容器镜像到亚马逊 ECR，
# 然后部署一个新的任务定义到亚马逊 ECS。

# 要使用此工作流，您需要完成以下设置步骤：

# 1. 创建一个 ECR 仓库来存储您的镜像。
#    例如：`aws ecr create-repository --repository-name my-ecr-repo --region us-east-2`。
#    将下面工作流程中 `ECR_REPOSITORY` 环境变量的值替换为您仓库的名称。
#    将下面工作流程中 `AWS_REGION` 环境变量的值替换为您仓库所在的区域。

# 2. 创建一个 ECS 任务定义、ECS 集群和 ECS 服务。
#    例如，可以在 ECS 控制台的入门指南中进行操作：
#      https://us-east-2.console.aws.amazon.com/ecs/home?region=us-east-2#/firstRun
#    将下面工作流程中 `ECS_SERVICE` 环境变量的值替换为您为亚马逊 ECS 服务设置的名称。
#    将下面工作流程中 `ECS_CLUSTER` 环境变量的值替换为您设置的集群名称。

# 3. 将 ECS 任务定义存储为 JSON 文件到您的仓库中。
#    格式应该遵循 `aws ecs register-task-definition --generate-cli-skeleton` 的输出。
#    将下面工作流程中 `ECS_TASK_DEFINITION` 环境变量的值替换为 JSON 文件的路径。
#    将下面工作流程中 `CONTAINER_NAME` 环境变量的值替换为任务定义的 `containerDefinitions` 部分中容器的名称。

# 4. 在 GitHub Actions secrets 中存储一个 IAM 用户访问密钥，命名为 `AWS_ACCESS_KEY_ID` 和 `AWS_SECRET_ACCESS_KEY`。
#    有关每个操作使用的 IAM 用户的推荐 IAM 策略和处理访问密钥凭据的最佳实践，请参阅下面使用的每个操作的文档。

name: 部署到亚马逊 ECS

on:
  push:
    branches: [ $default-branch ]

env:
  AWS_REGION: MY_AWS_REGION                   # 将其设置为您首选的 AWS 区域，例如 us-west-1
  ECR_REPOSITORY: MY_ECR_REPOSITORY           # 将其设置为您亚马逊 ECR 仓库的名称
  ECS_SERVICE: MY_ECS_SERVICE                 # 将其设置为您亚马逊 ECS 服务的名称
  ECS_CLUSTER: MY_ECS_CLUSTER                 # 将其设置为您亚马逊 ECS 集群的名称
  ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # 将其设置为指向您亚马逊 ECS 任务定义的路径
                                               # 文件路径，例如 .aws/task-definition.json
  CONTAINER_NAME: MY_CONTAINER_NAME           # 将其设置为任务定义中 containerDefinitions 部分中容器的名称

permissions:
  contents: read

jobs:
  deploy:
    name: 部署
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 配置 AWS 凭据
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 登录到亚马逊 ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: 构建、打标签并推送镜像到亚马逊 ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # 构建一个 Docker 容器并
        # 推送到 ECR，以便
        # 可以部署到 ECS。
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: 在亚马逊 ECS 任务定义中填充新的镜像 ID
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: 部署亚马逊 ECS 任务定义
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
