# 此工作流将在将提交推送到默认分支时，构建并推送一个 .NET Core 应用程序到 Azure Web App。

# 此工作流假设您已经创建了目标 Azure App Service Web App。
# 有关说明，请参见 https://docs.microsoft.com/zh-cn/azure/app-service/quickstart-dotnetcore?tabs=net60&pivots=development-environment-vscode

# 要配置此工作流：
# 1. 下载您的 Azure Web App 的 Publish Profile。您可以从 Azure 门户中的 Web App 概览页面下载此文件。
#    更多信息：https://docs.microsoft.com/zh-cn/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
# 2. 在您的仓库中创建一个名为 AZURE_WEBAPP_PUBLISH_PROFILE 的秘密，并将发布配置文件内容粘贴为秘密的值。
#    获取发布配置文件的说明，请参见：https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
# 3. 更改 AZURE_WEBAPP_NAME 的值。可选地，更改下面的 AZURE_WEBAPP_PACKAGE_PATH 和 DOTNET_VERSION 环境变量的值。

# 有关 GitHub Actions for Azure 的更多信息：https://github.com/Azure/Actions
# 有关 Azure Web Apps Deploy 操作的更多信息：https://github.com/Azure/webapps-deploy
# 有关使用 GitHub Action 工作流开始部署到 Azure 的更多示例：https://github.com/Azure/actions-workflow-samples

name: 构建并部署 ASP.Net Core 应用程序到 Azure Web App

env:
  AZURE_WEBAPP_NAME: your-app-name    # 将其设置为您的 Azure Web App 的名称
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # 将其设置为您的 Web App 项目的路径，默认为存储库根目录
  DOTNET_VERSION: '5'                 # 将其设置为要使用的 .NET Core 版本

on:
  push:
    branches: [ $default-branch ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 设置 .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 为更快的构建设置依赖项缓存
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: 使用 dotnet 构建
        run: dotnet build --configuration Release

      - name: dotnet 发布
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: 为部署作业上传构件
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: 从构建作业下载构件
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: 部署到 Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
