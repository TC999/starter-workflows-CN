# 这个工作流会在将代码提交到默认分支时构建并推送一个Node.js应用到Azure Web App。

# 这个工作流假定你已经创建了目标Azure App Service Web应用程序。
# 有关说明，请参见https://docs.microsoft.com/zh-cn/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli

# 要配置这个工作流：

# 1. 下载你的Azure Web App的发布配置文件。你可以从Azure门户中Web App的“概述”页面下载此文件。
#    更多信息：https://docs.microsoft.com/zh-cn/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials

# 2. 在你的存储库中创建一个名为AZURE_WEBAPP_PUBLISH_PROFILE的密钥，将发布配置文件的内容粘贴为密钥的值。
#    获取发布配置文件的说明请参见：https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret

# 3. 更改AZURE_WEBAPP_NAME的值。如果需要，下面还可以更改AZURE_WEBAPP_PACKAGE_PATH和NODE_VERSION环境变量的值。

# 有关GitHub Actions for Azure的更多信息：https://github.com/Azure/Actions
# 有关Azure Web Apps Deploy操作的更多信息：https://github.com/Azure/webapps-deploy
# 若要使用GitHub Actions工作流进行Azure部署的更多示例，请访问：https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ $default-branch ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 你的应用名称    # 设置为你的应用程序的名称
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # 设置为你的Web应用项目的路径，默认为存储库根目录
  NODE_VERSION: '14.x'                # 设置要使用的Node版本

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: 设置Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm 安装、构建和测试
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: 为部署任务上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: 从构建任务下载构建产物
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: '部署到Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
