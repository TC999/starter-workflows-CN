# 构建和部署 Next.js 站点到 GitHub Pages 的示例工作流
#
# 要开始使用 Next.js，请参阅: https://nextjs.org/docs/getting-started
#
name: 部署 Next.js 站点到 Pages

on:
  # 在推送到默认分支时运行
  push:
    branches: [$default-branch]

  # 允许您从“操作”选项卡手动运行此工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 仅允许一个并发部署，跳过在进行中的运行和最新排队运行之间的运行。
# 但是，不要取消进行中的运行，因为我们希望允许这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: 检测包管理器
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "无法确定包管理器"
            exit 1
          fi
      - name: 设置 Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: 设置 Pages
        uses: actions/configure-pages@v3
          # 自动在 Next.js 配置文件中注入 basePath 并禁用
          # 服务器端图片优化 (https://nextjs.org/docs/api-reference/next/image#unoptimized)。
          #
          # 如果要自行管理配置，则可以删除此行。
        with:
          static_site_generator: next
      - name: 恢复缓存
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # 每当包或源文件发生更改时生成新缓存。
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # 如果源文件发生更改但软件包没有更改，则从先前缓存重建。
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: 安装依赖
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: 使用 Next.js 构建
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: 使用 Next.js 进行静态 HTML 导出
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
