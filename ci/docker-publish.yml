name: Docker

# 这个工作流使用了GitHub未经认证的操作。
# 这些操作是由第三方提供的，并受到独立的服务条款、隐私政策和支持文档的管理。

on:
  schedule:
    - cron: $cron-daily
  push:
    branches: [ $default-branch ]
    # 发布语义版本标签作为发布。
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ $default-branch ]

env:
  # 如果为空，则使用 docker.io 作为 Docker Hub
  REGISTRY: ghcr.io
  # github.repository 作为 <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # 用于在不在 PR 中运行时完成身份验证挑战
      # 使用 sigstore/fulcio。
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 安装 cosign 工具，除非在 PR 中
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # 设置 BuildKit Docker 容器构建器，以便能够构建
      # 多平台镜像和导出缓存
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # 登录到 Docker 注册表，除非在 PR 中
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 提取 Docker 的元数据（标签，标签）
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # 构建和推送 Docker 镜像（在 PR 中不进行推送）
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 对生成的 Docker 镜像摘要进行签名（在 PR 中除外）。
      # 仅当 Docker 仓库是公共的时，才会将数据写入公共 Rekor 透明日志，以避免泄露数据。
      # 如果要发布私有镜像的透明数据，将 --force 传递给下面的 cosign。
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # 此步骤使用身份令牌来对 sigstore 社区 Fulcio 实例进行短暂证书的颁发。
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
